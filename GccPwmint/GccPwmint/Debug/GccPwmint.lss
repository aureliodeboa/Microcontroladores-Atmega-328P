
GccPwmint.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000162  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000010e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000162  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000194  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000001d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006a8  00000000  00000000  00000204  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000610  00000000  00000000  000008ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000267  00000000  00000000  00000ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000006c  00000000  00000000  00001124  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000365  00000000  00000000  00001190  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000092  00000000  00000000  000014f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001587  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 40 00 	jmp	0x80	; 0x80 <__vector_14>
  3c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__vector_15>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 73 00 	call	0xe6	; 0xe6 <main>
  78:	0c 94 85 00 	jmp	0x10a	; 0x10a <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <__vector_14>:

#include <avr/io.h>
#include <avr/interrupt.h>
#define  F_CPU 16000000UL

ISR(TIMER0_COMPA_vect){
  80:	1f 92       	push	r1
  82:	0f 92       	push	r0
  84:	0f b6       	in	r0, 0x3f	; 63
  86:	0f 92       	push	r0
  88:	11 24       	eor	r1, r1
  8a:	8f 93       	push	r24
  8c:	9f 93       	push	r25
	
	OCR0A = OCR0A + 1;
  8e:	87 b5       	in	r24, 0x27	; 39
  90:	8f 5f       	subi	r24, 0xFF	; 255
  92:	87 bd       	out	0x27, r24	; 39
	
	PORTD ^= (1<<PD6);
  94:	9b b1       	in	r25, 0x0b	; 11
  96:	80 e4       	ldi	r24, 0x40	; 64
  98:	89 27       	eor	r24, r25
  9a:	8b b9       	out	0x0b, r24	; 11
	
	if (OCR0A >= 255)
  9c:	87 b5       	in	r24, 0x27	; 39
  9e:	8f 3f       	cpi	r24, 0xFF	; 255
  a0:	09 f4       	brne	.+2      	; 0xa4 <__vector_14+0x24>
	{
		OCR0A = 0x00;
  a2:	17 bc       	out	0x27, r1	; 39
		
		
		//TIFR0 = 0x02;
	}
	
}
  a4:	9f 91       	pop	r25
  a6:	8f 91       	pop	r24
  a8:	0f 90       	pop	r0
  aa:	0f be       	out	0x3f, r0	; 63
  ac:	0f 90       	pop	r0
  ae:	1f 90       	pop	r1
  b0:	18 95       	reti

000000b2 <__vector_15>:
ISR(TIMER0_COMPB_vect){
  b2:	1f 92       	push	r1
  b4:	0f 92       	push	r0
  b6:	0f b6       	in	r0, 0x3f	; 63
  b8:	0f 92       	push	r0
  ba:	11 24       	eor	r1, r1
  bc:	8f 93       	push	r24
  be:	9f 93       	push	r25
	
	OCR0B = OCR0B - 1;
  c0:	88 b5       	in	r24, 0x28	; 40
  c2:	81 50       	subi	r24, 0x01	; 1
  c4:	88 bd       	out	0x28, r24	; 40
	PORTD ^= (1<<PD3);
  c6:	9b b1       	in	r25, 0x0b	; 11
  c8:	88 e0       	ldi	r24, 0x08	; 8
  ca:	89 27       	eor	r24, r25
  cc:	8b b9       	out	0x0b, r24	; 11
	
	if (OCR0B <= 0 )
  ce:	88 b5       	in	r24, 0x28	; 40
  d0:	81 11       	cpse	r24, r1
  d2:	02 c0       	rjmp	.+4      	; 0xd8 <__vector_15+0x26>
	{
		
		OCR0B = 0xFF;
  d4:	8f ef       	ldi	r24, 0xFF	; 255
  d6:	88 bd       	out	0x28, r24	; 40
		
		//TIFR0 = 0x02;
	}
	
}
  d8:	9f 91       	pop	r25
  da:	8f 91       	pop	r24
  dc:	0f 90       	pop	r0
  de:	0f be       	out	0x3f, r0	; 63
  e0:	0f 90       	pop	r0
  e2:	1f 90       	pop	r1
  e4:	18 95       	reti

000000e6 <main>:
{
   // No modo fast PWM, o TC0 conta até TOP (0xFF ou OCR0A) e reinicia a contagem. ao atingir TOP, o flag OCF0A=1;
   //0 sinal PWM é gerado no pino 0C0A (PD6).
   // clkSYS = 1/16MHz = 60,5 ns = cljIO = clkT0
   
   DDRB = 0x40; //ob01000000 ativa o PD6
  e6:	80 e4       	ldi	r24, 0x40	; 64
  e8:	84 b9       	out	0x04, r24	; 4
  // DDRB = 0b00001000;
   TIFR0 = 0x07; //zera o flags OCFB e, OCFA e TOV 0b00000111
  ea:	87 e0       	ldi	r24, 0x07	; 7
  ec:	85 bb       	out	0x15, r24	; 21
   TIMSK0= 0x06;
  ee:	86 e0       	ldi	r24, 0x06	; 6
  f0:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
   PORTD = 0x00; //zera o PD6
  f4:	1b b8       	out	0x0b, r1	; 11
   
   TCNT0 = 0x00; //zera timer 0
  f6:	16 bc       	out	0x26, r1	; 38
   sei();
  f8:	78 94       	sei

	OCR0A = 0x00;
  fa:	17 bc       	out	0x27, r1	; 39
	OCR0B= 0xFF;
  fc:	8f ef       	ldi	r24, 0xFF	; 255
  fe:	88 bd       	out	0x28, r24	; 40
	
	TCCR0A =  0xA3; //0b10100011;// // COM0A1 = 1 e COM0A0 = 0 (zera OC0A on cmopare match), COM0B1 = COM0B0 = 0 (operação da porta normal).
 100:	83 ea       	ldi	r24, 0xA3	; 163
 102:	84 bd       	out	0x24, r24	; 36
	//WGM01 = 1, WGM00 = 1 WGM02 - 0 (TCCR0B) (modo fast PWM, TOP = 0xFF, flag TOV setado em TOP= 0xFF).
	
	TCCR0B= 0x05; // 0b00001101;// //FOC0A = FOC0B = 0, WGM02 = 0, CS0[2:0]= 101 (clkIO/1024), ou seja, N= 1024.
 104:	85 e0       	ldi	r24, 0x05	; 5
 106:	85 bd       	out	0x25, r24	; 37
 108:	ff cf       	rjmp	.-2      	; 0x108 <main+0x22>

0000010a <_exit>:
 10a:	f8 94       	cli

0000010c <__stop_program>:
 10c:	ff cf       	rjmp	.-2      	; 0x10c <__stop_program>
